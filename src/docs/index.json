{
  "openapi": "3.0.0",
  "info": {
    "title": "Challenge Chapter 6 Binar",
    "version": "1.0.0",
    "description": "This is a part of Binar JavaScript Backend Bootcamp - FGA Batch 2 Challenge Chapter 6. \nThe challenge is to build a _simple_ Upload File & BLOG REST API where can handle basic CRUD (Create, Read, Update, dan Delete) operations.",
    "contact": {
      "email": "muhammadfernandes05@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://library-service-be-production.up.railway.app/api/v1"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication and authorization"
    },
    {
      "name": "users",
      "description": "Everything about users"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Auth register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegis"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/basicResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthRegisResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse400"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse401"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse403"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse404"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse500"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Auth login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLogin"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/basicResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/AuthLoginResponse"
                            },
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY0N2U2MTBlLWM4MjUtNDk5My1hMjZhLWZkYTZiYWNjZjEzNCIsImVtYWlsIjoiZmVybmFuZGVzQGdtYWlsLmNvbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzI0NDIxMzg1fQ.SX7kL6uLauejJNCVlmgbYzbyqsIxyXIyK74nWNQqQ7U"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse400"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse401"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse403"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse404"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse500"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "basicResponse": {
        "title": "basicResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "successfully do task"
          }
        }
      },
      "ErrorResponse400": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "statusCode": {
            "type": "integer",
            "example": 400
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad request"
              }
            }
          }
        }
      },
      "ErrorResponse401": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "statusCode": {
            "type": "integer",
            "example": 401
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Unauthorized"
              }
            }
          }
        }
      },
      "ErrorResponse403": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "statusCode": {
            "type": "integer",
            "example": 403
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Forbidden"
              }
            }
          }
        }
      },
      "ErrorResponse404": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "statusCode": {
            "type": "integer",
            "example": 404
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Resource not found"
              }
            }
          }
        }
      },
      "ErrorResponse500": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "statusCode": {
            "type": "integer",
            "example": 500
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Internal server error"
              }
            }
          }
        }
      },
      "AuthRegis": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": ""
          },
          "password": {
            "type": "string",
            "example": "Password123!"
          }
        }
      },
      "AuthLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": ""
          },
          "password": {
            "type": "string",
            "example": "Password123!"
          }
        }
      },
      "AuthRegisResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "158610b-5098-467b-b45a-05fcfdcd1288"
          },
          "email": {
            "type": "string",
            "example": "bagus@binar.co.id"
          },
          "username": {
            "type": "string",
            "example": "bagus"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$g7g7j6z9y9t1g51229.60$hJ6lX93p1bU4b8489384c15367976"
          },
          "profile_picture": {
            "type": "string",
            "example": null
          },
          "role": {
            "type": "string",
            "example": "USER"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-08-22T14:56:23.424Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-08-22T14:56:23.424Z"
          }
        }
      },
      "AuthLoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "158610b-5098-467b-b45a-05fcfdcd1288"
          },
          "email": {
            "type": "string",
            "example": "bagus@binar.co.id"
          },
          "role": {
            "type": "string",
            "example": "USER"
          }
        }
      }
    }
  }
}
